# This file was automatically generated by SWIG (http://www.swig.org).
# Version 3.0.12
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info >= (2, 7, 0):
    def swig_import_helper():
        import importlib
        pkg = __name__.rpartition('.')[0]
        mname = '.'.join((pkg, '_cairo')).lstrip('.')
        try:
            return importlib.import_module(mname)
        except ImportError:
            return importlib.import_module('_cairo')
    _cairo = swig_import_helper()
    del swig_import_helper
elif _swig_python_version_info >= (2, 6, 0):
    def swig_import_helper():
        from os.path import dirname
        import imp
        fp = None
        try:
            fp, pathname, description = imp.find_module('_cairo', [dirname(__file__)])
        except ImportError:
            import _cairo
            return _cairo
        try:
            _mod = imp.load_module('_cairo', fp, pathname, description)
        finally:
            if fp is not None:
                fp.close()
        return _mod
    _cairo = swig_import_helper()
    del swig_import_helper
else:
    import _cairo
del _swig_python_version_info

try:
    _swig_property = property
except NameError:
    pass  # Python < 2.2 doesn't have 'property'.

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_setattr_nondynamic(self, class_type, name, value, static=1):
    if (name == "thisown"):
        return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'SwigPyObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name, None)
    if method:
        return method(self, value)
    if (not static):
        if _newclass:
            object.__setattr__(self, name, value)
        else:
            self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)


def _swig_setattr(self, class_type, name, value):
    return _swig_setattr_nondynamic(self, class_type, name, value, 0)


def _swig_getattr(self, class_type, name):
    if (name == "thisown"):
        return self.this.own()
    method = class_type.__swig_getmethods__.get(name, None)
    if method:
        return method(self)
    raise AttributeError("'%s' object has no attribute '%s'" % (class_type.__name__, name))


def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

try:
    _object = object
    _newclass = 1
except __builtin__.Exception:
    class _object:
        pass
    _newclass = 0

CAIRO_VERSION_STRING = _cairo.CAIRO_VERSION_STRING

def cairo_version():
    return _cairo.cairo_version()
cairo_version = _cairo.cairo_version

def cairo_version_string():
    return _cairo.cairo_version_string()
cairo_version_string = _cairo.cairo_version_string
CAIRO_STATUS_SUCCESS = _cairo.CAIRO_STATUS_SUCCESS
CAIRO_STATUS_NO_MEMORY = _cairo.CAIRO_STATUS_NO_MEMORY
CAIRO_STATUS_INVALID_RESTORE = _cairo.CAIRO_STATUS_INVALID_RESTORE
CAIRO_STATUS_INVALID_POP_GROUP = _cairo.CAIRO_STATUS_INVALID_POP_GROUP
CAIRO_STATUS_NO_CURRENT_POINT = _cairo.CAIRO_STATUS_NO_CURRENT_POINT
CAIRO_STATUS_INVALID_MATRIX = _cairo.CAIRO_STATUS_INVALID_MATRIX
CAIRO_STATUS_INVALID_STATUS = _cairo.CAIRO_STATUS_INVALID_STATUS
CAIRO_STATUS_NULL_POINTER = _cairo.CAIRO_STATUS_NULL_POINTER
CAIRO_STATUS_INVALID_STRING = _cairo.CAIRO_STATUS_INVALID_STRING
CAIRO_STATUS_INVALID_PATH_DATA = _cairo.CAIRO_STATUS_INVALID_PATH_DATA
CAIRO_STATUS_READ_ERROR = _cairo.CAIRO_STATUS_READ_ERROR
CAIRO_STATUS_WRITE_ERROR = _cairo.CAIRO_STATUS_WRITE_ERROR
CAIRO_STATUS_SURFACE_FINISHED = _cairo.CAIRO_STATUS_SURFACE_FINISHED
CAIRO_STATUS_SURFACE_TYPE_MISMATCH = _cairo.CAIRO_STATUS_SURFACE_TYPE_MISMATCH
CAIRO_STATUS_PATTERN_TYPE_MISMATCH = _cairo.CAIRO_STATUS_PATTERN_TYPE_MISMATCH
CAIRO_STATUS_INVALID_CONTENT = _cairo.CAIRO_STATUS_INVALID_CONTENT
CAIRO_STATUS_INVALID_FORMAT = _cairo.CAIRO_STATUS_INVALID_FORMAT
CAIRO_STATUS_INVALID_VISUAL = _cairo.CAIRO_STATUS_INVALID_VISUAL
CAIRO_STATUS_FILE_NOT_FOUND = _cairo.CAIRO_STATUS_FILE_NOT_FOUND
CAIRO_STATUS_INVALID_DASH = _cairo.CAIRO_STATUS_INVALID_DASH
CAIRO_STATUS_INVALID_DSC_COMMENT = _cairo.CAIRO_STATUS_INVALID_DSC_COMMENT
CAIRO_STATUS_INVALID_INDEX = _cairo.CAIRO_STATUS_INVALID_INDEX
CAIRO_STATUS_CLIP_NOT_REPRESENTABLE = _cairo.CAIRO_STATUS_CLIP_NOT_REPRESENTABLE
CAIRO_STATUS_TEMP_FILE_ERROR = _cairo.CAIRO_STATUS_TEMP_FILE_ERROR
CAIRO_STATUS_INVALID_STRIDE = _cairo.CAIRO_STATUS_INVALID_STRIDE
CAIRO_STATUS_FONT_TYPE_MISMATCH = _cairo.CAIRO_STATUS_FONT_TYPE_MISMATCH
CAIRO_STATUS_USER_FONT_IMMUTABLE = _cairo.CAIRO_STATUS_USER_FONT_IMMUTABLE
CAIRO_STATUS_USER_FONT_ERROR = _cairo.CAIRO_STATUS_USER_FONT_ERROR
CAIRO_STATUS_NEGATIVE_COUNT = _cairo.CAIRO_STATUS_NEGATIVE_COUNT
CAIRO_STATUS_INVALID_CLUSTERS = _cairo.CAIRO_STATUS_INVALID_CLUSTERS
CAIRO_STATUS_INVALID_SLANT = _cairo.CAIRO_STATUS_INVALID_SLANT
CAIRO_STATUS_INVALID_WEIGHT = _cairo.CAIRO_STATUS_INVALID_WEIGHT
CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED = _cairo.CAIRO_STATUS_USER_FONT_NOT_IMPLEMENTED
CAIRO_STATUS_DEVICE_TYPE_MISMATCH = _cairo.CAIRO_STATUS_DEVICE_TYPE_MISMATCH
CAIRO_STATUS_DEVICE_ERROR = _cairo.CAIRO_STATUS_DEVICE_ERROR
CAIRO_CONTENT_COLOR = _cairo.CAIRO_CONTENT_COLOR
CAIRO_CONTENT_ALPHA = _cairo.CAIRO_CONTENT_ALPHA
CAIRO_CONTENT_COLOR_ALPHA = _cairo.CAIRO_CONTENT_COLOR_ALPHA

def cairo_create(target):
    return _cairo.cairo_create(target)
cairo_create = _cairo.cairo_create

def cairo_reference(cr):
    return _cairo.cairo_reference(cr)
cairo_reference = _cairo.cairo_reference

def cairo_destroy(cr):
    return _cairo.cairo_destroy(cr)
cairo_destroy = _cairo.cairo_destroy

def cairo_get_reference_count(cr):
    return _cairo.cairo_get_reference_count(cr)
cairo_get_reference_count = _cairo.cairo_get_reference_count

def cairo_save(cr):
    return _cairo.cairo_save(cr)
cairo_save = _cairo.cairo_save

def cairo_restore(cr):
    return _cairo.cairo_restore(cr)
cairo_restore = _cairo.cairo_restore

def cairo_push_group(cr):
    return _cairo.cairo_push_group(cr)
cairo_push_group = _cairo.cairo_push_group

def cairo_push_group_with_content(cr, content):
    return _cairo.cairo_push_group_with_content(cr, content)
cairo_push_group_with_content = _cairo.cairo_push_group_with_content

def cairo_pop_group(cr):
    return _cairo.cairo_pop_group(cr)
cairo_pop_group = _cairo.cairo_pop_group

def cairo_pop_group_to_source(cr):
    return _cairo.cairo_pop_group_to_source(cr)
cairo_pop_group_to_source = _cairo.cairo_pop_group_to_source
CAIRO_OPERATOR_CLEAR = _cairo.CAIRO_OPERATOR_CLEAR
CAIRO_OPERATOR_SOURCE = _cairo.CAIRO_OPERATOR_SOURCE
CAIRO_OPERATOR_OVER = _cairo.CAIRO_OPERATOR_OVER
CAIRO_OPERATOR_IN = _cairo.CAIRO_OPERATOR_IN
CAIRO_OPERATOR_OUT = _cairo.CAIRO_OPERATOR_OUT
CAIRO_OPERATOR_ATOP = _cairo.CAIRO_OPERATOR_ATOP
CAIRO_OPERATOR_DEST = _cairo.CAIRO_OPERATOR_DEST
CAIRO_OPERATOR_DEST_OVER = _cairo.CAIRO_OPERATOR_DEST_OVER
CAIRO_OPERATOR_DEST_IN = _cairo.CAIRO_OPERATOR_DEST_IN
CAIRO_OPERATOR_DEST_OUT = _cairo.CAIRO_OPERATOR_DEST_OUT
CAIRO_OPERATOR_DEST_ATOP = _cairo.CAIRO_OPERATOR_DEST_ATOP
CAIRO_OPERATOR_XOR = _cairo.CAIRO_OPERATOR_XOR
CAIRO_OPERATOR_ADD = _cairo.CAIRO_OPERATOR_ADD
CAIRO_OPERATOR_SATURATE = _cairo.CAIRO_OPERATOR_SATURATE
CAIRO_OPERATOR_MULTIPLY = _cairo.CAIRO_OPERATOR_MULTIPLY
CAIRO_OPERATOR_SCREEN = _cairo.CAIRO_OPERATOR_SCREEN
CAIRO_OPERATOR_OVERLAY = _cairo.CAIRO_OPERATOR_OVERLAY
CAIRO_OPERATOR_DARKEN = _cairo.CAIRO_OPERATOR_DARKEN
CAIRO_OPERATOR_LIGHTEN = _cairo.CAIRO_OPERATOR_LIGHTEN
CAIRO_OPERATOR_COLOR_DODGE = _cairo.CAIRO_OPERATOR_COLOR_DODGE
CAIRO_OPERATOR_COLOR_BURN = _cairo.CAIRO_OPERATOR_COLOR_BURN
CAIRO_OPERATOR_HARD_LIGHT = _cairo.CAIRO_OPERATOR_HARD_LIGHT
CAIRO_OPERATOR_SOFT_LIGHT = _cairo.CAIRO_OPERATOR_SOFT_LIGHT
CAIRO_OPERATOR_DIFFERENCE = _cairo.CAIRO_OPERATOR_DIFFERENCE
CAIRO_OPERATOR_EXCLUSION = _cairo.CAIRO_OPERATOR_EXCLUSION
CAIRO_OPERATOR_HSL_HUE = _cairo.CAIRO_OPERATOR_HSL_HUE
CAIRO_OPERATOR_HSL_SATURATION = _cairo.CAIRO_OPERATOR_HSL_SATURATION
CAIRO_OPERATOR_HSL_COLOR = _cairo.CAIRO_OPERATOR_HSL_COLOR
CAIRO_OPERATOR_HSL_LUMINOSITY = _cairo.CAIRO_OPERATOR_HSL_LUMINOSITY

def cairo_set_operator(cr, op):
    return _cairo.cairo_set_operator(cr, op)
cairo_set_operator = _cairo.cairo_set_operator

def cairo_set_source(cr, source):
    return _cairo.cairo_set_source(cr, source)
cairo_set_source = _cairo.cairo_set_source

def cairo_set_source_rgb(cr, red, green, blue):
    return _cairo.cairo_set_source_rgb(cr, red, green, blue)
cairo_set_source_rgb = _cairo.cairo_set_source_rgb

def cairo_set_source_rgba(cr, red, green, blue, alpha):
    return _cairo.cairo_set_source_rgba(cr, red, green, blue, alpha)
cairo_set_source_rgba = _cairo.cairo_set_source_rgba

def cairo_set_source_surface(cr, surface, x, y):
    return _cairo.cairo_set_source_surface(cr, surface, x, y)
cairo_set_source_surface = _cairo.cairo_set_source_surface

def cairo_set_tolerance(cr, tolerance):
    return _cairo.cairo_set_tolerance(cr, tolerance)
cairo_set_tolerance = _cairo.cairo_set_tolerance
CAIRO_ANTIALIAS_DEFAULT = _cairo.CAIRO_ANTIALIAS_DEFAULT
CAIRO_ANTIALIAS_NONE = _cairo.CAIRO_ANTIALIAS_NONE
CAIRO_ANTIALIAS_GRAY = _cairo.CAIRO_ANTIALIAS_GRAY
CAIRO_ANTIALIAS_SUBPIXEL = _cairo.CAIRO_ANTIALIAS_SUBPIXEL

def cairo_set_antialias(cr, antialias):
    return _cairo.cairo_set_antialias(cr, antialias)
cairo_set_antialias = _cairo.cairo_set_antialias
CAIRO_FILL_RULE_WINDING = _cairo.CAIRO_FILL_RULE_WINDING
CAIRO_FILL_RULE_EVEN_ODD = _cairo.CAIRO_FILL_RULE_EVEN_ODD

def cairo_set_fill_rule(cr, fill_rule):
    return _cairo.cairo_set_fill_rule(cr, fill_rule)
cairo_set_fill_rule = _cairo.cairo_set_fill_rule

def cairo_set_line_width(cr, width):
    return _cairo.cairo_set_line_width(cr, width)
cairo_set_line_width = _cairo.cairo_set_line_width
CAIRO_LINE_CAP_BUTT = _cairo.CAIRO_LINE_CAP_BUTT
CAIRO_LINE_CAP_ROUND = _cairo.CAIRO_LINE_CAP_ROUND
CAIRO_LINE_CAP_SQUARE = _cairo.CAIRO_LINE_CAP_SQUARE

def cairo_set_line_cap(cr, line_cap):
    return _cairo.cairo_set_line_cap(cr, line_cap)
cairo_set_line_cap = _cairo.cairo_set_line_cap
CAIRO_LINE_JOIN_MITER = _cairo.CAIRO_LINE_JOIN_MITER
CAIRO_LINE_JOIN_ROUND = _cairo.CAIRO_LINE_JOIN_ROUND
CAIRO_LINE_JOIN_BEVEL = _cairo.CAIRO_LINE_JOIN_BEVEL

def cairo_set_line_join(cr, line_join):
    return _cairo.cairo_set_line_join(cr, line_join)
cairo_set_line_join = _cairo.cairo_set_line_join

def cairo_set_dash(cr, dashes, offset):
    return _cairo.cairo_set_dash(cr, dashes, offset)
cairo_set_dash = _cairo.cairo_set_dash

def cairo_set_miter_limit(cr, limit):
    return _cairo.cairo_set_miter_limit(cr, limit)
cairo_set_miter_limit = _cairo.cairo_set_miter_limit

def cairo_translate(cr, tx, ty):
    return _cairo.cairo_translate(cr, tx, ty)
cairo_translate = _cairo.cairo_translate

def cairo_scale(cr, sx, sy):
    return _cairo.cairo_scale(cr, sx, sy)
cairo_scale = _cairo.cairo_scale

def cairo_rotate(cr, angle):
    return _cairo.cairo_rotate(cr, angle)
cairo_rotate = _cairo.cairo_rotate

def cairo_transform(cr, matrix):
    return _cairo.cairo_transform(cr, matrix)
cairo_transform = _cairo.cairo_transform

def cairo_set_matrix(cr, matrix):
    return _cairo.cairo_set_matrix(cr, matrix)
cairo_set_matrix = _cairo.cairo_set_matrix

def cairo_identity_matrix(cr):
    return _cairo.cairo_identity_matrix(cr)
cairo_identity_matrix = _cairo.cairo_identity_matrix

def cairo_user_to_device(cr, x, y):
    return _cairo.cairo_user_to_device(cr, x, y)
cairo_user_to_device = _cairo.cairo_user_to_device

def cairo_user_to_device_distance(cr, dx, dy):
    return _cairo.cairo_user_to_device_distance(cr, dx, dy)
cairo_user_to_device_distance = _cairo.cairo_user_to_device_distance

def cairo_device_to_user(cr, x, y):
    return _cairo.cairo_device_to_user(cr, x, y)
cairo_device_to_user = _cairo.cairo_device_to_user

def cairo_device_to_user_distance(cr, dx, dy):
    return _cairo.cairo_device_to_user_distance(cr, dx, dy)
cairo_device_to_user_distance = _cairo.cairo_device_to_user_distance

def cairo_new_path(cr):
    return _cairo.cairo_new_path(cr)
cairo_new_path = _cairo.cairo_new_path

def cairo_move_to(cr, x, y):
    return _cairo.cairo_move_to(cr, x, y)
cairo_move_to = _cairo.cairo_move_to

def cairo_new_sub_path(cr):
    return _cairo.cairo_new_sub_path(cr)
cairo_new_sub_path = _cairo.cairo_new_sub_path

def cairo_line_to(cr, x, y):
    return _cairo.cairo_line_to(cr, x, y)
cairo_line_to = _cairo.cairo_line_to

def cairo_curve_to(cr, x1, y1, x2, y2, x3, y3):
    return _cairo.cairo_curve_to(cr, x1, y1, x2, y2, x3, y3)
cairo_curve_to = _cairo.cairo_curve_to

def cairo_arc(cr, xc, yc, radius, angle1, angle2):
    return _cairo.cairo_arc(cr, xc, yc, radius, angle1, angle2)
cairo_arc = _cairo.cairo_arc

def cairo_arc_negative(cr, xc, yc, radius, angle1, angle2):
    return _cairo.cairo_arc_negative(cr, xc, yc, radius, angle1, angle2)
cairo_arc_negative = _cairo.cairo_arc_negative

def cairo_rel_move_to(cr, dx, dy):
    return _cairo.cairo_rel_move_to(cr, dx, dy)
cairo_rel_move_to = _cairo.cairo_rel_move_to

def cairo_rel_line_to(cr, dx, dy):
    return _cairo.cairo_rel_line_to(cr, dx, dy)
cairo_rel_line_to = _cairo.cairo_rel_line_to

def cairo_rel_curve_to(cr, dx1, dy1, dx2, dy2, dx3, dy3):
    return _cairo.cairo_rel_curve_to(cr, dx1, dy1, dx2, dy2, dx3, dy3)
cairo_rel_curve_to = _cairo.cairo_rel_curve_to

def cairo_rectangle(cr, x, y, width, height):
    return _cairo.cairo_rectangle(cr, x, y, width, height)
cairo_rectangle = _cairo.cairo_rectangle

def cairo_close_path(cr):
    return _cairo.cairo_close_path(cr)
cairo_close_path = _cairo.cairo_close_path

def cairo_path_extents(cr, x1, y1, x2, y2):
    return _cairo.cairo_path_extents(cr, x1, y1, x2, y2)
cairo_path_extents = _cairo.cairo_path_extents

def cairo_paint(cr):
    return _cairo.cairo_paint(cr)
cairo_paint = _cairo.cairo_paint

def cairo_paint_with_alpha(cr, alpha):
    return _cairo.cairo_paint_with_alpha(cr, alpha)
cairo_paint_with_alpha = _cairo.cairo_paint_with_alpha

def cairo_mask(cr, pattern):
    return _cairo.cairo_mask(cr, pattern)
cairo_mask = _cairo.cairo_mask

def cairo_mask_surface(cr, surface, surface_x, surface_y):
    return _cairo.cairo_mask_surface(cr, surface, surface_x, surface_y)
cairo_mask_surface = _cairo.cairo_mask_surface

def cairo_stroke(cr):
    return _cairo.cairo_stroke(cr)
cairo_stroke = _cairo.cairo_stroke

def cairo_stroke_preserve(cr):
    return _cairo.cairo_stroke_preserve(cr)
cairo_stroke_preserve = _cairo.cairo_stroke_preserve

def cairo_fill(cr):
    return _cairo.cairo_fill(cr)
cairo_fill = _cairo.cairo_fill

def cairo_fill_preserve(cr):
    return _cairo.cairo_fill_preserve(cr)
cairo_fill_preserve = _cairo.cairo_fill_preserve

def cairo_copy_page(cr):
    return _cairo.cairo_copy_page(cr)
cairo_copy_page = _cairo.cairo_copy_page

def cairo_show_page(cr):
    return _cairo.cairo_show_page(cr)
cairo_show_page = _cairo.cairo_show_page

def cairo_in_stroke(cr, x, y):
    return _cairo.cairo_in_stroke(cr, x, y)
cairo_in_stroke = _cairo.cairo_in_stroke

def cairo_in_fill(cr, x, y):
    return _cairo.cairo_in_fill(cr, x, y)
cairo_in_fill = _cairo.cairo_in_fill

def cairo_in_clip(cr, x, y):
    return _cairo.cairo_in_clip(cr, x, y)
cairo_in_clip = _cairo.cairo_in_clip

def cairo_stroke_extents(cr, x1, y1, x2, y2):
    return _cairo.cairo_stroke_extents(cr, x1, y1, x2, y2)
cairo_stroke_extents = _cairo.cairo_stroke_extents

def cairo_fill_extents(cr, x1, y1, x2, y2):
    return _cairo.cairo_fill_extents(cr, x1, y1, x2, y2)
cairo_fill_extents = _cairo.cairo_fill_extents

def cairo_reset_clip(cr):
    return _cairo.cairo_reset_clip(cr)
cairo_reset_clip = _cairo.cairo_reset_clip

def cairo_clip(cr):
    return _cairo.cairo_clip(cr)
cairo_clip = _cairo.cairo_clip

def cairo_clip_preserve(cr):
    return _cairo.cairo_clip_preserve(cr)
cairo_clip_preserve = _cairo.cairo_clip_preserve

def cairo_clip_extents(cr, x1, y1, x2, y2):
    return _cairo.cairo_clip_extents(cr, x1, y1, x2, y2)
cairo_clip_extents = _cairo.cairo_clip_extents
class cairo_glyph_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, cairo_glyph_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, cairo_glyph_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["index"] = _cairo.cairo_glyph_t_index_set
    __swig_getmethods__["index"] = _cairo.cairo_glyph_t_index_get
    if _newclass:
        index = _swig_property(_cairo.cairo_glyph_t_index_get, _cairo.cairo_glyph_t_index_set)
    __swig_setmethods__["x"] = _cairo.cairo_glyph_t_x_set
    __swig_getmethods__["x"] = _cairo.cairo_glyph_t_x_get
    if _newclass:
        x = _swig_property(_cairo.cairo_glyph_t_x_get, _cairo.cairo_glyph_t_x_set)
    __swig_setmethods__["y"] = _cairo.cairo_glyph_t_y_set
    __swig_getmethods__["y"] = _cairo.cairo_glyph_t_y_get
    if _newclass:
        y = _swig_property(_cairo.cairo_glyph_t_y_get, _cairo.cairo_glyph_t_y_set)

    def __init__(self):
        this = _cairo.new_cairo_glyph_t()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cairo.delete_cairo_glyph_t
    __del__ = lambda self: None
cairo_glyph_t_swigregister = _cairo.cairo_glyph_t_swigregister
cairo_glyph_t_swigregister(cairo_glyph_t)


def cairo_glyph_allocate(num_glyphs):
    return _cairo.cairo_glyph_allocate(num_glyphs)
cairo_glyph_allocate = _cairo.cairo_glyph_allocate

def cairo_glyph_free(glyphs):
    return _cairo.cairo_glyph_free(glyphs)
cairo_glyph_free = _cairo.cairo_glyph_free
class cairo_text_cluster_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, cairo_text_cluster_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, cairo_text_cluster_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["num_bytes"] = _cairo.cairo_text_cluster_t_num_bytes_set
    __swig_getmethods__["num_bytes"] = _cairo.cairo_text_cluster_t_num_bytes_get
    if _newclass:
        num_bytes = _swig_property(_cairo.cairo_text_cluster_t_num_bytes_get, _cairo.cairo_text_cluster_t_num_bytes_set)
    __swig_setmethods__["num_glyphs"] = _cairo.cairo_text_cluster_t_num_glyphs_set
    __swig_getmethods__["num_glyphs"] = _cairo.cairo_text_cluster_t_num_glyphs_get
    if _newclass:
        num_glyphs = _swig_property(_cairo.cairo_text_cluster_t_num_glyphs_get, _cairo.cairo_text_cluster_t_num_glyphs_set)

    def __init__(self):
        this = _cairo.new_cairo_text_cluster_t()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cairo.delete_cairo_text_cluster_t
    __del__ = lambda self: None
cairo_text_cluster_t_swigregister = _cairo.cairo_text_cluster_t_swigregister
cairo_text_cluster_t_swigregister(cairo_text_cluster_t)


def cairo_text_cluster_allocate(num_clusters):
    return _cairo.cairo_text_cluster_allocate(num_clusters)
cairo_text_cluster_allocate = _cairo.cairo_text_cluster_allocate

def cairo_text_cluster_free(clusters):
    return _cairo.cairo_text_cluster_free(clusters)
cairo_text_cluster_free = _cairo.cairo_text_cluster_free
CAIRO_TEXT_CLUSTER_FLAG_BACKWARD = _cairo.CAIRO_TEXT_CLUSTER_FLAG_BACKWARD
class cairo_text_extents_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, cairo_text_extents_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, cairo_text_extents_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["x_bearing"] = _cairo.cairo_text_extents_t_x_bearing_set
    __swig_getmethods__["x_bearing"] = _cairo.cairo_text_extents_t_x_bearing_get
    if _newclass:
        x_bearing = _swig_property(_cairo.cairo_text_extents_t_x_bearing_get, _cairo.cairo_text_extents_t_x_bearing_set)
    __swig_setmethods__["y_bearing"] = _cairo.cairo_text_extents_t_y_bearing_set
    __swig_getmethods__["y_bearing"] = _cairo.cairo_text_extents_t_y_bearing_get
    if _newclass:
        y_bearing = _swig_property(_cairo.cairo_text_extents_t_y_bearing_get, _cairo.cairo_text_extents_t_y_bearing_set)
    __swig_setmethods__["width"] = _cairo.cairo_text_extents_t_width_set
    __swig_getmethods__["width"] = _cairo.cairo_text_extents_t_width_get
    if _newclass:
        width = _swig_property(_cairo.cairo_text_extents_t_width_get, _cairo.cairo_text_extents_t_width_set)
    __swig_setmethods__["height"] = _cairo.cairo_text_extents_t_height_set
    __swig_getmethods__["height"] = _cairo.cairo_text_extents_t_height_get
    if _newclass:
        height = _swig_property(_cairo.cairo_text_extents_t_height_get, _cairo.cairo_text_extents_t_height_set)
    __swig_setmethods__["x_advance"] = _cairo.cairo_text_extents_t_x_advance_set
    __swig_getmethods__["x_advance"] = _cairo.cairo_text_extents_t_x_advance_get
    if _newclass:
        x_advance = _swig_property(_cairo.cairo_text_extents_t_x_advance_get, _cairo.cairo_text_extents_t_x_advance_set)
    __swig_setmethods__["y_advance"] = _cairo.cairo_text_extents_t_y_advance_set
    __swig_getmethods__["y_advance"] = _cairo.cairo_text_extents_t_y_advance_get
    if _newclass:
        y_advance = _swig_property(_cairo.cairo_text_extents_t_y_advance_get, _cairo.cairo_text_extents_t_y_advance_set)

    def __init__(self):
        this = _cairo.new_cairo_text_extents_t()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cairo.delete_cairo_text_extents_t
    __del__ = lambda self: None
cairo_text_extents_t_swigregister = _cairo.cairo_text_extents_t_swigregister
cairo_text_extents_t_swigregister(cairo_text_extents_t)

class cairo_font_extents_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, cairo_font_extents_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, cairo_font_extents_t, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ascent"] = _cairo.cairo_font_extents_t_ascent_set
    __swig_getmethods__["ascent"] = _cairo.cairo_font_extents_t_ascent_get
    if _newclass:
        ascent = _swig_property(_cairo.cairo_font_extents_t_ascent_get, _cairo.cairo_font_extents_t_ascent_set)
    __swig_setmethods__["descent"] = _cairo.cairo_font_extents_t_descent_set
    __swig_getmethods__["descent"] = _cairo.cairo_font_extents_t_descent_get
    if _newclass:
        descent = _swig_property(_cairo.cairo_font_extents_t_descent_get, _cairo.cairo_font_extents_t_descent_set)
    __swig_setmethods__["height"] = _cairo.cairo_font_extents_t_height_set
    __swig_getmethods__["height"] = _cairo.cairo_font_extents_t_height_get
    if _newclass:
        height = _swig_property(_cairo.cairo_font_extents_t_height_get, _cairo.cairo_font_extents_t_height_set)
    __swig_setmethods__["max_x_advance"] = _cairo.cairo_font_extents_t_max_x_advance_set
    __swig_getmethods__["max_x_advance"] = _cairo.cairo_font_extents_t_max_x_advance_get
    if _newclass:
        max_x_advance = _swig_property(_cairo.cairo_font_extents_t_max_x_advance_get, _cairo.cairo_font_extents_t_max_x_advance_set)
    __swig_setmethods__["max_y_advance"] = _cairo.cairo_font_extents_t_max_y_advance_set
    __swig_getmethods__["max_y_advance"] = _cairo.cairo_font_extents_t_max_y_advance_get
    if _newclass:
        max_y_advance = _swig_property(_cairo.cairo_font_extents_t_max_y_advance_get, _cairo.cairo_font_extents_t_max_y_advance_set)

    def __init__(self):
        this = _cairo.new_cairo_font_extents_t()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cairo.delete_cairo_font_extents_t
    __del__ = lambda self: None
cairo_font_extents_t_swigregister = _cairo.cairo_font_extents_t_swigregister
cairo_font_extents_t_swigregister(cairo_font_extents_t)

CAIRO_FONT_SLANT_NORMAL = _cairo.CAIRO_FONT_SLANT_NORMAL
CAIRO_FONT_SLANT_ITALIC = _cairo.CAIRO_FONT_SLANT_ITALIC
CAIRO_FONT_SLANT_OBLIQUE = _cairo.CAIRO_FONT_SLANT_OBLIQUE
CAIRO_FONT_WEIGHT_NORMAL = _cairo.CAIRO_FONT_WEIGHT_NORMAL
CAIRO_FONT_WEIGHT_BOLD = _cairo.CAIRO_FONT_WEIGHT_BOLD
CAIRO_SUBPIXEL_ORDER_DEFAULT = _cairo.CAIRO_SUBPIXEL_ORDER_DEFAULT
CAIRO_SUBPIXEL_ORDER_RGB = _cairo.CAIRO_SUBPIXEL_ORDER_RGB
CAIRO_SUBPIXEL_ORDER_BGR = _cairo.CAIRO_SUBPIXEL_ORDER_BGR
CAIRO_SUBPIXEL_ORDER_VRGB = _cairo.CAIRO_SUBPIXEL_ORDER_VRGB
CAIRO_SUBPIXEL_ORDER_VBGR = _cairo.CAIRO_SUBPIXEL_ORDER_VBGR
CAIRO_HINT_STYLE_DEFAULT = _cairo.CAIRO_HINT_STYLE_DEFAULT
CAIRO_HINT_STYLE_NONE = _cairo.CAIRO_HINT_STYLE_NONE
CAIRO_HINT_STYLE_SLIGHT = _cairo.CAIRO_HINT_STYLE_SLIGHT
CAIRO_HINT_STYLE_MEDIUM = _cairo.CAIRO_HINT_STYLE_MEDIUM
CAIRO_HINT_STYLE_FULL = _cairo.CAIRO_HINT_STYLE_FULL
CAIRO_HINT_METRICS_DEFAULT = _cairo.CAIRO_HINT_METRICS_DEFAULT
CAIRO_HINT_METRICS_OFF = _cairo.CAIRO_HINT_METRICS_OFF
CAIRO_HINT_METRICS_ON = _cairo.CAIRO_HINT_METRICS_ON

def cairo_font_options_create():
    return _cairo.cairo_font_options_create()
cairo_font_options_create = _cairo.cairo_font_options_create

def cairo_font_options_copy(original):
    return _cairo.cairo_font_options_copy(original)
cairo_font_options_copy = _cairo.cairo_font_options_copy

def cairo_font_options_destroy(options):
    return _cairo.cairo_font_options_destroy(options)
cairo_font_options_destroy = _cairo.cairo_font_options_destroy

def cairo_font_options_status(options):
    return _cairo.cairo_font_options_status(options)
cairo_font_options_status = _cairo.cairo_font_options_status

def cairo_font_options_merge(options, other):
    return _cairo.cairo_font_options_merge(options, other)
cairo_font_options_merge = _cairo.cairo_font_options_merge

def cairo_font_options_equal(options, other):
    return _cairo.cairo_font_options_equal(options, other)
cairo_font_options_equal = _cairo.cairo_font_options_equal

def cairo_font_options_hash(options):
    return _cairo.cairo_font_options_hash(options)
cairo_font_options_hash = _cairo.cairo_font_options_hash

def cairo_font_options_set_antialias(options, antialias):
    return _cairo.cairo_font_options_set_antialias(options, antialias)
cairo_font_options_set_antialias = _cairo.cairo_font_options_set_antialias

def cairo_font_options_get_antialias(options):
    return _cairo.cairo_font_options_get_antialias(options)
cairo_font_options_get_antialias = _cairo.cairo_font_options_get_antialias

def cairo_font_options_set_subpixel_order(options, subpixel_order):
    return _cairo.cairo_font_options_set_subpixel_order(options, subpixel_order)
cairo_font_options_set_subpixel_order = _cairo.cairo_font_options_set_subpixel_order

def cairo_font_options_get_subpixel_order(options):
    return _cairo.cairo_font_options_get_subpixel_order(options)
cairo_font_options_get_subpixel_order = _cairo.cairo_font_options_get_subpixel_order

def cairo_font_options_set_hint_style(options, hint_style):
    return _cairo.cairo_font_options_set_hint_style(options, hint_style)
cairo_font_options_set_hint_style = _cairo.cairo_font_options_set_hint_style

def cairo_font_options_get_hint_style(options):
    return _cairo.cairo_font_options_get_hint_style(options)
cairo_font_options_get_hint_style = _cairo.cairo_font_options_get_hint_style

def cairo_font_options_set_hint_metrics(options, hint_metrics):
    return _cairo.cairo_font_options_set_hint_metrics(options, hint_metrics)
cairo_font_options_set_hint_metrics = _cairo.cairo_font_options_set_hint_metrics

def cairo_font_options_get_hint_metrics(options):
    return _cairo.cairo_font_options_get_hint_metrics(options)
cairo_font_options_get_hint_metrics = _cairo.cairo_font_options_get_hint_metrics

def cairo_select_font_face(cr, family, slant, weight):
    return _cairo.cairo_select_font_face(cr, family, slant, weight)
cairo_select_font_face = _cairo.cairo_select_font_face

def cairo_set_font_size(cr, size):
    return _cairo.cairo_set_font_size(cr, size)
cairo_set_font_size = _cairo.cairo_set_font_size

def cairo_set_font_matrix(cr, matrix):
    return _cairo.cairo_set_font_matrix(cr, matrix)
cairo_set_font_matrix = _cairo.cairo_set_font_matrix

def cairo_get_font_matrix(cr, matrix):
    return _cairo.cairo_get_font_matrix(cr, matrix)
cairo_get_font_matrix = _cairo.cairo_get_font_matrix

def cairo_set_font_options(cr, options):
    return _cairo.cairo_set_font_options(cr, options)
cairo_set_font_options = _cairo.cairo_set_font_options

def cairo_get_font_options(cr, options):
    return _cairo.cairo_get_font_options(cr, options)
cairo_get_font_options = _cairo.cairo_get_font_options

def cairo_set_font_face(cr, font_face):
    return _cairo.cairo_set_font_face(cr, font_face)
cairo_set_font_face = _cairo.cairo_set_font_face

def cairo_get_font_face(cr):
    return _cairo.cairo_get_font_face(cr)
cairo_get_font_face = _cairo.cairo_get_font_face

def cairo_set_scaled_font(cr, scaled_font):
    return _cairo.cairo_set_scaled_font(cr, scaled_font)
cairo_set_scaled_font = _cairo.cairo_set_scaled_font

def cairo_get_scaled_font(cr):
    return _cairo.cairo_get_scaled_font(cr)
cairo_get_scaled_font = _cairo.cairo_get_scaled_font

def cairo_show_text(cr, utf8):
    return _cairo.cairo_show_text(cr, utf8)
cairo_show_text = _cairo.cairo_show_text

def cairo_show_glyphs(cr, glyphs, num_glyphs):
    return _cairo.cairo_show_glyphs(cr, glyphs, num_glyphs)
cairo_show_glyphs = _cairo.cairo_show_glyphs

def cairo_show_text_glyphs(cr, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags):
    return _cairo.cairo_show_text_glyphs(cr, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags)
cairo_show_text_glyphs = _cairo.cairo_show_text_glyphs

def cairo_text_path(cr, utf8):
    return _cairo.cairo_text_path(cr, utf8)
cairo_text_path = _cairo.cairo_text_path

def cairo_glyph_path(cr, glyphs, num_glyphs):
    return _cairo.cairo_glyph_path(cr, glyphs, num_glyphs)
cairo_glyph_path = _cairo.cairo_glyph_path

def cairo_text_extents(cr, utf8):
    return _cairo.cairo_text_extents(cr, utf8)
cairo_text_extents = _cairo.cairo_text_extents

def cairo_glyph_extents(cr, glyphs, num_glyphs):
    return _cairo.cairo_glyph_extents(cr, glyphs, num_glyphs)
cairo_glyph_extents = _cairo.cairo_glyph_extents

def cairo_font_extents(cr, extents):
    return _cairo.cairo_font_extents(cr, extents)
cairo_font_extents = _cairo.cairo_font_extents

def cairo_font_face_reference(font_face):
    return _cairo.cairo_font_face_reference(font_face)
cairo_font_face_reference = _cairo.cairo_font_face_reference

def cairo_font_face_destroy(font_face):
    return _cairo.cairo_font_face_destroy(font_face)
cairo_font_face_destroy = _cairo.cairo_font_face_destroy

def cairo_font_face_get_reference_count(font_face):
    return _cairo.cairo_font_face_get_reference_count(font_face)
cairo_font_face_get_reference_count = _cairo.cairo_font_face_get_reference_count

def cairo_font_face_status(font_face):
    return _cairo.cairo_font_face_status(font_face)
cairo_font_face_status = _cairo.cairo_font_face_status
CAIRO_FONT_TYPE_TOY = _cairo.CAIRO_FONT_TYPE_TOY
CAIRO_FONT_TYPE_FT = _cairo.CAIRO_FONT_TYPE_FT
CAIRO_FONT_TYPE_WIN32 = _cairo.CAIRO_FONT_TYPE_WIN32
CAIRO_FONT_TYPE_QUARTZ = _cairo.CAIRO_FONT_TYPE_QUARTZ
CAIRO_FONT_TYPE_USER = _cairo.CAIRO_FONT_TYPE_USER

def cairo_font_face_get_type(font_face):
    return _cairo.cairo_font_face_get_type(font_face)
cairo_font_face_get_type = _cairo.cairo_font_face_get_type

def cairo_scaled_font_create(font_face, font_matrix, ctm, options):
    return _cairo.cairo_scaled_font_create(font_face, font_matrix, ctm, options)
cairo_scaled_font_create = _cairo.cairo_scaled_font_create

def cairo_scaled_font_reference(scaled_font):
    return _cairo.cairo_scaled_font_reference(scaled_font)
cairo_scaled_font_reference = _cairo.cairo_scaled_font_reference

def cairo_scaled_font_destroy(scaled_font):
    return _cairo.cairo_scaled_font_destroy(scaled_font)
cairo_scaled_font_destroy = _cairo.cairo_scaled_font_destroy

def cairo_scaled_font_get_reference_count(scaled_font):
    return _cairo.cairo_scaled_font_get_reference_count(scaled_font)
cairo_scaled_font_get_reference_count = _cairo.cairo_scaled_font_get_reference_count

def cairo_scaled_font_status(scaled_font):
    return _cairo.cairo_scaled_font_status(scaled_font)
cairo_scaled_font_status = _cairo.cairo_scaled_font_status

def cairo_scaled_font_get_type(scaled_font):
    return _cairo.cairo_scaled_font_get_type(scaled_font)
cairo_scaled_font_get_type = _cairo.cairo_scaled_font_get_type

def cairo_scaled_font_extents(scaled_font, extents):
    return _cairo.cairo_scaled_font_extents(scaled_font, extents)
cairo_scaled_font_extents = _cairo.cairo_scaled_font_extents

def cairo_scaled_font_text_extents(scaled_font, utf8):
    return _cairo.cairo_scaled_font_text_extents(scaled_font, utf8)
cairo_scaled_font_text_extents = _cairo.cairo_scaled_font_text_extents

def cairo_scaled_font_glyph_extents(scaled_font, glyphs, num_glyphs):
    return _cairo.cairo_scaled_font_glyph_extents(scaled_font, glyphs, num_glyphs)
cairo_scaled_font_glyph_extents = _cairo.cairo_scaled_font_glyph_extents

def cairo_scaled_font_text_to_glyphs(scaled_font, x, y, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags):
    return _cairo.cairo_scaled_font_text_to_glyphs(scaled_font, x, y, utf8, utf8_len, glyphs, num_glyphs, clusters, num_clusters, cluster_flags)
cairo_scaled_font_text_to_glyphs = _cairo.cairo_scaled_font_text_to_glyphs

def cairo_scaled_font_get_font_face(scaled_font):
    return _cairo.cairo_scaled_font_get_font_face(scaled_font)
cairo_scaled_font_get_font_face = _cairo.cairo_scaled_font_get_font_face

def cairo_scaled_font_get_font_matrix(scaled_font, font_matrix):
    return _cairo.cairo_scaled_font_get_font_matrix(scaled_font, font_matrix)
cairo_scaled_font_get_font_matrix = _cairo.cairo_scaled_font_get_font_matrix

def cairo_scaled_font_get_ctm(scaled_font, ctm):
    return _cairo.cairo_scaled_font_get_ctm(scaled_font, ctm)
cairo_scaled_font_get_ctm = _cairo.cairo_scaled_font_get_ctm

def cairo_scaled_font_get_scale_matrix(scaled_font, scale_matrix):
    return _cairo.cairo_scaled_font_get_scale_matrix(scaled_font, scale_matrix)
cairo_scaled_font_get_scale_matrix = _cairo.cairo_scaled_font_get_scale_matrix

def cairo_scaled_font_get_font_options(scaled_font, options):
    return _cairo.cairo_scaled_font_get_font_options(scaled_font, options)
cairo_scaled_font_get_font_options = _cairo.cairo_scaled_font_get_font_options

def cairo_toy_font_face_create(family, slant, weight):
    return _cairo.cairo_toy_font_face_create(family, slant, weight)
cairo_toy_font_face_create = _cairo.cairo_toy_font_face_create

def cairo_toy_font_face_get_family(font_face):
    return _cairo.cairo_toy_font_face_get_family(font_face)
cairo_toy_font_face_get_family = _cairo.cairo_toy_font_face_get_family

def cairo_toy_font_face_get_slant(font_face):
    return _cairo.cairo_toy_font_face_get_slant(font_face)
cairo_toy_font_face_get_slant = _cairo.cairo_toy_font_face_get_slant

def cairo_toy_font_face_get_weight(font_face):
    return _cairo.cairo_toy_font_face_get_weight(font_face)
cairo_toy_font_face_get_weight = _cairo.cairo_toy_font_face_get_weight

def cairo_get_operator(cr):
    return _cairo.cairo_get_operator(cr)
cairo_get_operator = _cairo.cairo_get_operator

def cairo_get_source(cr):
    return _cairo.cairo_get_source(cr)
cairo_get_source = _cairo.cairo_get_source

def cairo_get_tolerance(cr):
    return _cairo.cairo_get_tolerance(cr)
cairo_get_tolerance = _cairo.cairo_get_tolerance

def cairo_get_antialias(cr):
    return _cairo.cairo_get_antialias(cr)
cairo_get_antialias = _cairo.cairo_get_antialias

def cairo_has_current_point(cr):
    return _cairo.cairo_has_current_point(cr)
cairo_has_current_point = _cairo.cairo_has_current_point

def cairo_get_current_point(cr, x, y):
    return _cairo.cairo_get_current_point(cr, x, y)
cairo_get_current_point = _cairo.cairo_get_current_point

def cairo_get_fill_rule(cr):
    return _cairo.cairo_get_fill_rule(cr)
cairo_get_fill_rule = _cairo.cairo_get_fill_rule

def cairo_get_line_width(cr):
    return _cairo.cairo_get_line_width(cr)
cairo_get_line_width = _cairo.cairo_get_line_width

def cairo_get_line_cap(cr):
    return _cairo.cairo_get_line_cap(cr)
cairo_get_line_cap = _cairo.cairo_get_line_cap

def cairo_get_line_join(cr):
    return _cairo.cairo_get_line_join(cr)
cairo_get_line_join = _cairo.cairo_get_line_join

def cairo_get_miter_limit(cr):
    return _cairo.cairo_get_miter_limit(cr)
cairo_get_miter_limit = _cairo.cairo_get_miter_limit

def cairo_get_dash_count(cr):
    return _cairo.cairo_get_dash_count(cr)
cairo_get_dash_count = _cairo.cairo_get_dash_count

def cairo_get_dash(cr, dashes, offset):
    return _cairo.cairo_get_dash(cr, dashes, offset)
cairo_get_dash = _cairo.cairo_get_dash

def cairo_get_matrix(cr, matrix):
    return _cairo.cairo_get_matrix(cr, matrix)
cairo_get_matrix = _cairo.cairo_get_matrix

def cairo_get_target(cr):
    return _cairo.cairo_get_target(cr)
cairo_get_target = _cairo.cairo_get_target

def cairo_get_group_target(cr):
    return _cairo.cairo_get_group_target(cr)
cairo_get_group_target = _cairo.cairo_get_group_target
CAIRO_PATH_MOVE_TO = _cairo.CAIRO_PATH_MOVE_TO
CAIRO_PATH_LINE_TO = _cairo.CAIRO_PATH_LINE_TO
CAIRO_PATH_CURVE_TO = _cairo.CAIRO_PATH_CURVE_TO
CAIRO_PATH_CLOSE_PATH = _cairo.CAIRO_PATH_CLOSE_PATH
class _cairo_path_data_t(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, _cairo_path_data_t, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, _cairo_path_data_t, name)
    __repr__ = _swig_repr

    def __init__(self):
        this = _cairo.new__cairo_path_data_t()
        try:
            self.this.append(this)
        except __builtin__.Exception:
            self.this = this
    __swig_destroy__ = _cairo.delete__cairo_path_data_t
    __del__ = lambda self: None
_cairo_path_data_t_swigregister = _cairo._cairo_path_data_t_swigregister
_cairo_path_data_t_swigregister(_cairo_path_data_t)


def cairo_copy_path(cr):
    return _cairo.cairo_copy_path(cr)
cairo_copy_path = _cairo.cairo_copy_path

def cairo_copy_path_flat(cr):
    return _cairo.cairo_copy_path_flat(cr)
cairo_copy_path_flat = _cairo.cairo_copy_path_flat

def cairo_append_path(cr, path):
    return _cairo.cairo_append_path(cr, path)
cairo_append_path = _cairo.cairo_append_path

def cairo_path_destroy(path):
    return _cairo.cairo_path_destroy(path)
cairo_path_destroy = _cairo.cairo_path_destroy

def cairo_status(cr):
    return _cairo.cairo_status(cr)
cairo_status = _cairo.cairo_status

def cairo_status_to_string(status):
    return _cairo.cairo_status_to_string(status)
cairo_status_to_string = _cairo.cairo_status_to_string

def cairo_surface_create_similar(other, content, width, height):
    return _cairo.cairo_surface_create_similar(other, content, width, height)
cairo_surface_create_similar = _cairo.cairo_surface_create_similar

def cairo_surface_create_for_rectangle(target, x, y, width, height):
    return _cairo.cairo_surface_create_for_rectangle(target, x, y, width, height)
cairo_surface_create_for_rectangle = _cairo.cairo_surface_create_for_rectangle

def cairo_surface_reference(surface):
    return _cairo.cairo_surface_reference(surface)
cairo_surface_reference = _cairo.cairo_surface_reference

def cairo_surface_finish(surface):
    return _cairo.cairo_surface_finish(surface)
cairo_surface_finish = _cairo.cairo_surface_finish

def cairo_surface_destroy(surface):
    return _cairo.cairo_surface_destroy(surface)
cairo_surface_destroy = _cairo.cairo_surface_destroy

def cairo_surface_get_device(surface):
    return _cairo.cairo_surface_get_device(surface)
cairo_surface_get_device = _cairo.cairo_surface_get_device

def cairo_surface_get_reference_count(surface):
    return _cairo.cairo_surface_get_reference_count(surface)
cairo_surface_get_reference_count = _cairo.cairo_surface_get_reference_count

def cairo_surface_status(surface):
    return _cairo.cairo_surface_status(surface)
cairo_surface_status = _cairo.cairo_surface_status
CAIRO_SURFACE_TYPE_IMAGE = _cairo.CAIRO_SURFACE_TYPE_IMAGE
CAIRO_SURFACE_TYPE_PDF = _cairo.CAIRO_SURFACE_TYPE_PDF
CAIRO_SURFACE_TYPE_PS = _cairo.CAIRO_SURFACE_TYPE_PS
CAIRO_SURFACE_TYPE_XLIB = _cairo.CAIRO_SURFACE_TYPE_XLIB
CAIRO_SURFACE_TYPE_XCB = _cairo.CAIRO_SURFACE_TYPE_XCB
CAIRO_SURFACE_TYPE_GLITZ = _cairo.CAIRO_SURFACE_TYPE_GLITZ
CAIRO_SURFACE_TYPE_QUARTZ = _cairo.CAIRO_SURFACE_TYPE_QUARTZ
CAIRO_SURFACE_TYPE_WIN32 = _cairo.CAIRO_SURFACE_TYPE_WIN32
CAIRO_SURFACE_TYPE_BEOS = _cairo.CAIRO_SURFACE_TYPE_BEOS
CAIRO_SURFACE_TYPE_DIRECTFB = _cairo.CAIRO_SURFACE_TYPE_DIRECTFB
CAIRO_SURFACE_TYPE_SVG = _cairo.CAIRO_SURFACE_TYPE_SVG
CAIRO_SURFACE_TYPE_OS2 = _cairo.CAIRO_SURFACE_TYPE_OS2
CAIRO_SURFACE_TYPE_WIN32_PRINTING = _cairo.CAIRO_SURFACE_TYPE_WIN32_PRINTING
CAIRO_SURFACE_TYPE_QUARTZ_IMAGE = _cairo.CAIRO_SURFACE_TYPE_QUARTZ_IMAGE
CAIRO_SURFACE_TYPE_QT = _cairo.CAIRO_SURFACE_TYPE_QT
CAIRO_SURFACE_TYPE_RECORDING = _cairo.CAIRO_SURFACE_TYPE_RECORDING
CAIRO_SURFACE_TYPE_VG = _cairo.CAIRO_SURFACE_TYPE_VG
CAIRO_SURFACE_TYPE_GL = _cairo.CAIRO_SURFACE_TYPE_GL
CAIRO_SURFACE_TYPE_DRM = _cairo.CAIRO_SURFACE_TYPE_DRM
CAIRO_SURFACE_TYPE_TEE = _cairo.CAIRO_SURFACE_TYPE_TEE
CAIRO_SURFACE_TYPE_XML = _cairo.CAIRO_SURFACE_TYPE_XML
CAIRO_SURFACE_TYPE_SKIA = _cairo.CAIRO_SURFACE_TYPE_SKIA
CAIRO_SURFACE_TYPE_SUBSURFACE = _cairo.CAIRO_SURFACE_TYPE_SUBSURFACE

def cairo_surface_get_type(surface):
    return _cairo.cairo_surface_get_type(surface)
cairo_surface_get_type = _cairo.cairo_surface_get_type

def cairo_surface_get_content(surface):
    return _cairo.cairo_surface_get_content(surface)
cairo_surface_get_content = _cairo.cairo_surface_get_content

def cairo_surface_write_to_png(surface, filename):
    return _cairo.cairo_surface_write_to_png(surface, filename)
cairo_surface_write_to_png = _cairo.cairo_surface_write_to_png
CAIRO_MIME_TYPE_JPEG = _cairo.CAIRO_MIME_TYPE_JPEG
CAIRO_MIME_TYPE_PNG = _cairo.CAIRO_MIME_TYPE_PNG
CAIRO_MIME_TYPE_JP2 = _cairo.CAIRO_MIME_TYPE_JP2
CAIRO_MIME_TYPE_URI = _cairo.CAIRO_MIME_TYPE_URI

def cairo_surface_get_font_options(surface, options):
    return _cairo.cairo_surface_get_font_options(surface, options)
cairo_surface_get_font_options = _cairo.cairo_surface_get_font_options

def cairo_surface_flush(surface):
    return _cairo.cairo_surface_flush(surface)
cairo_surface_flush = _cairo.cairo_surface_flush

def cairo_surface_mark_dirty(surface):
    return _cairo.cairo_surface_mark_dirty(surface)
cairo_surface_mark_dirty = _cairo.cairo_surface_mark_dirty

def cairo_surface_mark_dirty_rectangle(surface, x, y, width, height):
    return _cairo.cairo_surface_mark_dirty_rectangle(surface, x, y, width, height)
cairo_surface_mark_dirty_rectangle = _cairo.cairo_surface_mark_dirty_rectangle

def cairo_surface_set_device_offset(surface, x_offset, y_offset):
    return _cairo.cairo_surface_set_device_offset(surface, x_offset, y_offset)
cairo_surface_set_device_offset = _cairo.cairo_surface_set_device_offset

def cairo_surface_get_device_offset(surface, x_offset, y_offset):
    return _cairo.cairo_surface_get_device_offset(surface, x_offset, y_offset)
cairo_surface_get_device_offset = _cairo.cairo_surface_get_device_offset

def cairo_surface_set_fallback_resolution(surface, x_pixels_per_inch, y_pixels_per_inch):
    return _cairo.cairo_surface_set_fallback_resolution(surface, x_pixels_per_inch, y_pixels_per_inch)
cairo_surface_set_fallback_resolution = _cairo.cairo_surface_set_fallback_resolution

def cairo_surface_get_fallback_resolution(surface, x_pixels_per_inch, y_pixels_per_inch):
    return _cairo.cairo_surface_get_fallback_resolution(surface, x_pixels_per_inch, y_pixels_per_inch)
cairo_surface_get_fallback_resolution = _cairo.cairo_surface_get_fallback_resolution

def cairo_surface_copy_page(surface):
    return _cairo.cairo_surface_copy_page(surface)
cairo_surface_copy_page = _cairo.cairo_surface_copy_page

def cairo_surface_show_page(surface):
    return _cairo.cairo_surface_show_page(surface)
cairo_surface_show_page = _cairo.cairo_surface_show_page

def cairo_surface_has_show_text_glyphs(surface):
    return _cairo.cairo_surface_has_show_text_glyphs(surface)
cairo_surface_has_show_text_glyphs = _cairo.cairo_surface_has_show_text_glyphs
CAIRO_FORMAT_INVALID = _cairo.CAIRO_FORMAT_INVALID
CAIRO_FORMAT_ARGB32 = _cairo.CAIRO_FORMAT_ARGB32
CAIRO_FORMAT_RGB24 = _cairo.CAIRO_FORMAT_RGB24
CAIRO_FORMAT_A8 = _cairo.CAIRO_FORMAT_A8
CAIRO_FORMAT_A1 = _cairo.CAIRO_FORMAT_A1
CAIRO_FORMAT_RGB16_565 = _cairo.CAIRO_FORMAT_RGB16_565

def cairo_image_surface_create(format, width, height):
    return _cairo.cairo_image_surface_create(format, width, height)
cairo_image_surface_create = _cairo.cairo_image_surface_create

def cairo_format_stride_for_width(format, width):
    return _cairo.cairo_format_stride_for_width(format, width)
cairo_format_stride_for_width = _cairo.cairo_format_stride_for_width

def cairo_image_surface_get_format(surface):
    return _cairo.cairo_image_surface_get_format(surface)
cairo_image_surface_get_format = _cairo.cairo_image_surface_get_format

def cairo_image_surface_get_width(surface):
    return _cairo.cairo_image_surface_get_width(surface)
cairo_image_surface_get_width = _cairo.cairo_image_surface_get_width

def cairo_image_surface_get_height(surface):
    return _cairo.cairo_image_surface_get_height(surface)
cairo_image_surface_get_height = _cairo.cairo_image_surface_get_height

def cairo_image_surface_get_stride(surface):
    return _cairo.cairo_image_surface_get_stride(surface)
cairo_image_surface_get_stride = _cairo.cairo_image_surface_get_stride

def cairo_image_surface_create_from_png(filename):
    return _cairo.cairo_image_surface_create_from_png(filename)
cairo_image_surface_create_from_png = _cairo.cairo_image_surface_create_from_png

def cairo_recording_surface_create(content, extents):
    return _cairo.cairo_recording_surface_create(content, extents)
cairo_recording_surface_create = _cairo.cairo_recording_surface_create

def cairo_recording_surface_ink_extents(surface, x0, y0, width, height):
    return _cairo.cairo_recording_surface_ink_extents(surface, x0, y0, width, height)
cairo_recording_surface_ink_extents = _cairo.cairo_recording_surface_ink_extents

def cairo_pattern_create_rgb(red, green, blue):
    return _cairo.cairo_pattern_create_rgb(red, green, blue)
cairo_pattern_create_rgb = _cairo.cairo_pattern_create_rgb

def cairo_pattern_create_rgba(red, green, blue, alpha):
    return _cairo.cairo_pattern_create_rgba(red, green, blue, alpha)
cairo_pattern_create_rgba = _cairo.cairo_pattern_create_rgba

def cairo_pattern_create_for_surface(surface):
    return _cairo.cairo_pattern_create_for_surface(surface)
cairo_pattern_create_for_surface = _cairo.cairo_pattern_create_for_surface

def cairo_pattern_create_linear(x0, y0, x1, y1):
    return _cairo.cairo_pattern_create_linear(x0, y0, x1, y1)
cairo_pattern_create_linear = _cairo.cairo_pattern_create_linear

def cairo_pattern_create_radial(cx0, cy0, radius0, cx1, cy1, radius1):
    return _cairo.cairo_pattern_create_radial(cx0, cy0, radius0, cx1, cy1, radius1)
cairo_pattern_create_radial = _cairo.cairo_pattern_create_radial

def cairo_pattern_reference(pattern):
    return _cairo.cairo_pattern_reference(pattern)
cairo_pattern_reference = _cairo.cairo_pattern_reference

def cairo_pattern_destroy(pattern):
    return _cairo.cairo_pattern_destroy(pattern)
cairo_pattern_destroy = _cairo.cairo_pattern_destroy

def cairo_pattern_get_reference_count(pattern):
    return _cairo.cairo_pattern_get_reference_count(pattern)
cairo_pattern_get_reference_count = _cairo.cairo_pattern_get_reference_count

def cairo_pattern_status(pattern):
    return _cairo.cairo_pattern_status(pattern)
cairo_pattern_status = _cairo.cairo_pattern_status
CAIRO_PATTERN_TYPE_SOLID = _cairo.CAIRO_PATTERN_TYPE_SOLID
CAIRO_PATTERN_TYPE_SURFACE = _cairo.CAIRO_PATTERN_TYPE_SURFACE
CAIRO_PATTERN_TYPE_LINEAR = _cairo.CAIRO_PATTERN_TYPE_LINEAR
CAIRO_PATTERN_TYPE_RADIAL = _cairo.CAIRO_PATTERN_TYPE_RADIAL

def cairo_pattern_get_type(pattern):
    return _cairo.cairo_pattern_get_type(pattern)
cairo_pattern_get_type = _cairo.cairo_pattern_get_type

def cairo_pattern_add_color_stop_rgb(pattern, offset, red, green, blue):
    return _cairo.cairo_pattern_add_color_stop_rgb(pattern, offset, red, green, blue)
cairo_pattern_add_color_stop_rgb = _cairo.cairo_pattern_add_color_stop_rgb

def cairo_pattern_add_color_stop_rgba(pattern, offset, red, green, blue, alpha):
    return _cairo.cairo_pattern_add_color_stop_rgba(pattern, offset, red, green, blue, alpha)
cairo_pattern_add_color_stop_rgba = _cairo.cairo_pattern_add_color_stop_rgba

def cairo_pattern_set_matrix(pattern, matrix):
    return _cairo.cairo_pattern_set_matrix(pattern, matrix)
cairo_pattern_set_matrix = _cairo.cairo_pattern_set_matrix

def cairo_pattern_get_matrix(pattern, matrix):
    return _cairo.cairo_pattern_get_matrix(pattern, matrix)
cairo_pattern_get_matrix = _cairo.cairo_pattern_get_matrix
CAIRO_EXTEND_NONE = _cairo.CAIRO_EXTEND_NONE
CAIRO_EXTEND_REPEAT = _cairo.CAIRO_EXTEND_REPEAT
CAIRO_EXTEND_REFLECT = _cairo.CAIRO_EXTEND_REFLECT
CAIRO_EXTEND_PAD = _cairo.CAIRO_EXTEND_PAD

def cairo_pattern_set_extend(pattern, extend):
    return _cairo.cairo_pattern_set_extend(pattern, extend)
cairo_pattern_set_extend = _cairo.cairo_pattern_set_extend

def cairo_pattern_get_extend(pattern):
    return _cairo.cairo_pattern_get_extend(pattern)
cairo_pattern_get_extend = _cairo.cairo_pattern_get_extend
CAIRO_FILTER_FAST = _cairo.CAIRO_FILTER_FAST
CAIRO_FILTER_GOOD = _cairo.CAIRO_FILTER_GOOD
CAIRO_FILTER_BEST = _cairo.CAIRO_FILTER_BEST
CAIRO_FILTER_NEAREST = _cairo.CAIRO_FILTER_NEAREST
CAIRO_FILTER_BILINEAR = _cairo.CAIRO_FILTER_BILINEAR
CAIRO_FILTER_GAUSSIAN = _cairo.CAIRO_FILTER_GAUSSIAN

def cairo_pattern_set_filter(pattern, filter):
    return _cairo.cairo_pattern_set_filter(pattern, filter)
cairo_pattern_set_filter = _cairo.cairo_pattern_set_filter

def cairo_pattern_get_filter(pattern):
    return _cairo.cairo_pattern_get_filter(pattern)
cairo_pattern_get_filter = _cairo.cairo_pattern_get_filter

def cairo_pattern_get_rgba(pattern, red, green, blue, alpha):
    return _cairo.cairo_pattern_get_rgba(pattern, red, green, blue, alpha)
cairo_pattern_get_rgba = _cairo.cairo_pattern_get_rgba

def cairo_pattern_get_surface(pattern, surface):
    return _cairo.cairo_pattern_get_surface(pattern, surface)
cairo_pattern_get_surface = _cairo.cairo_pattern_get_surface

def cairo_pattern_get_color_stop_rgba(pattern, index, offset, red, green, blue, alpha):
    return _cairo.cairo_pattern_get_color_stop_rgba(pattern, index, offset, red, green, blue, alpha)
cairo_pattern_get_color_stop_rgba = _cairo.cairo_pattern_get_color_stop_rgba

def cairo_pattern_get_color_stop_count(pattern, count):
    return _cairo.cairo_pattern_get_color_stop_count(pattern, count)
cairo_pattern_get_color_stop_count = _cairo.cairo_pattern_get_color_stop_count

def cairo_pattern_get_linear_points(pattern, x0, y0, x1, y1):
    return _cairo.cairo_pattern_get_linear_points(pattern, x0, y0, x1, y1)
cairo_pattern_get_linear_points = _cairo.cairo_pattern_get_linear_points

def cairo_pattern_get_radial_circles(pattern, x0, y0, r0, x1, y1, r1):
    return _cairo.cairo_pattern_get_radial_circles(pattern, x0, y0, r0, x1, y1, r1)
cairo_pattern_get_radial_circles = _cairo.cairo_pattern_get_radial_circles

def cairo_matrix_init(matrix, xx, yx, xy, yy, x0, y0):
    return _cairo.cairo_matrix_init(matrix, xx, yx, xy, yy, x0, y0)
cairo_matrix_init = _cairo.cairo_matrix_init

def cairo_matrix_init_identity(matrix):
    return _cairo.cairo_matrix_init_identity(matrix)
cairo_matrix_init_identity = _cairo.cairo_matrix_init_identity

def cairo_matrix_init_translate(matrix, tx, ty):
    return _cairo.cairo_matrix_init_translate(matrix, tx, ty)
cairo_matrix_init_translate = _cairo.cairo_matrix_init_translate

def cairo_matrix_init_scale(matrix, sx, sy):
    return _cairo.cairo_matrix_init_scale(matrix, sx, sy)
cairo_matrix_init_scale = _cairo.cairo_matrix_init_scale

def cairo_matrix_init_rotate(matrix, radians):
    return _cairo.cairo_matrix_init_rotate(matrix, radians)
cairo_matrix_init_rotate = _cairo.cairo_matrix_init_rotate

def cairo_matrix_translate(matrix, tx, ty):
    return _cairo.cairo_matrix_translate(matrix, tx, ty)
cairo_matrix_translate = _cairo.cairo_matrix_translate

def cairo_matrix_scale(matrix, sx, sy):
    return _cairo.cairo_matrix_scale(matrix, sx, sy)
cairo_matrix_scale = _cairo.cairo_matrix_scale

def cairo_matrix_rotate(matrix, radians):
    return _cairo.cairo_matrix_rotate(matrix, radians)
cairo_matrix_rotate = _cairo.cairo_matrix_rotate

def cairo_matrix_invert(matrix):
    return _cairo.cairo_matrix_invert(matrix)
cairo_matrix_invert = _cairo.cairo_matrix_invert

def cairo_matrix_multiply(result, a, b):
    return _cairo.cairo_matrix_multiply(result, a, b)
cairo_matrix_multiply = _cairo.cairo_matrix_multiply

def cairo_matrix_transform_distance(matrix, dx, dy):
    return _cairo.cairo_matrix_transform_distance(matrix, dx, dy)
cairo_matrix_transform_distance = _cairo.cairo_matrix_transform_distance

def cairo_matrix_transform_point(matrix, x, y):
    return _cairo.cairo_matrix_transform_point(matrix, x, y)
cairo_matrix_transform_point = _cairo.cairo_matrix_transform_point

def cairo_region_create_rectangles(rects, count):
    return _cairo.cairo_region_create_rectangles(rects, count)
cairo_region_create_rectangles = _cairo.cairo_region_create_rectangles

def cairo_region_reference(region):
    return _cairo.cairo_region_reference(region)
cairo_region_reference = _cairo.cairo_region_reference

def cairo_region_equal(a, b):
    return _cairo.cairo_region_equal(a, b)
cairo_region_equal = _cairo.cairo_region_equal

def cairo_region_xor(dst, other):
    return _cairo.cairo_region_xor(dst, other)
cairo_region_xor = _cairo.cairo_region_xor

def cairo_region_xor_rectangle(dst, rectangle):
    return _cairo.cairo_region_xor_rectangle(dst, rectangle)
cairo_region_xor_rectangle = _cairo.cairo_region_xor_rectangle

def cairo_debug_reset_static_data():
    return _cairo.cairo_debug_reset_static_data()
cairo_debug_reset_static_data = _cairo.cairo_debug_reset_static_data
# This file is compatible with both classic and new-style classes.


